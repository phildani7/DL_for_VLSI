{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of TensorFlow with GPU","version":"0.3.2","provenance":[{"file_id":"/v2/external/notebooks/gpu.ipynb","timestamp":1537599314833}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 2","name":"python2"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"BlmQIFSLZDdc","colab_type":"text"},"cell_type":"markdown","source":["# Confirm TensorFlow can see the GPU\n","\n","Simply select \"GPU\" in the Accelerator drop-down in Notebook Settings (either through the Edit menu or the command palette at cmd/ctrl-shift-P)."]},{"metadata":{"id":"3IEVK-KFxi5Z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a8db8a96-751d-4e22-b666-c6411b09be2d","executionInfo":{"status":"ok","timestamp":1537610200104,"user_tz":-330,"elapsed":12472,"user":{"displayName":"Philemon Daniel","photoUrl":"","userId":"06587091607560878110"}}},"cell_type":"code","source":["import tensorflow as tf\n","device_name = tf.test.gpu_device_name()\n","if device_name != '/device:GPU:0':\n","  raise SystemError('GPU device not found')\n","print('Found GPU at: {}'.format(device_name))"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Found GPU at: /device:GPU:0\n"],"name":"stdout"}]},{"metadata":{"id":"GYqc-njT-_aO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":768},"outputId":"19f29d3d-0462-4d3a-bf7a-1f88b090f58d","executionInfo":{"status":"ok","timestamp":1537610284730,"user_tz":-330,"elapsed":37330,"user":{"displayName":"Philemon Daniel","photoUrl":"","userId":"06587091607560878110"}}},"cell_type":"code","source":["!pip install dtw\n","!pip install librosa\n","from dtw import dtw\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import librosa\n","import IPython.display\n","from IPython.display import Image\n","%matplotlib inline"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Collecting dtw\n","  Downloading https://files.pythonhosted.org/packages/31/47/2fcc0e83ab73dd399af329904954651f1cea6b191831f1b7654447181dc8/dtw-1.3.tar.gz\n","Requirement already satisfied: numpy in /usr/local/lib/python2.7/dist-packages (from dtw) (1.14.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python2.7/dist-packages (from dtw) (0.19.1)\n","Building wheels for collected packages: dtw\n","  Running setup.py bdist_wheel for dtw ... \u001b[?25l-\b \bdone\n","\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/40/3e/69/ada210512f930d65418b619933ed1b234d92d07862d5b60fdc\n","Successfully built dtw\n","Installing collected packages: dtw\n","Successfully installed dtw-1.3\n","Collecting librosa\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/09/b4/5b411f19de48f8fc1a0ff615555aa9124952e4156e94d4803377e50cfa4c/librosa-0.6.2.tar.gz (1.6MB)\n","\u001b[K    100% |████████████████████████████████| 1.6MB 13.4MB/s \n","\u001b[?25hCollecting audioread>=2.0.0 (from librosa)\n","  Downloading https://files.pythonhosted.org/packages/f0/41/8cd160c6b2046b997d571a744a7f398f39e954a62dd747b2aae1ad7f07d4/audioread-2.1.6.tar.gz\n","Requirement already satisfied: numpy>=1.8.0 in /usr/local/lib/python2.7/dist-packages (from librosa) (1.14.5)\n","Requirement already satisfied: scipy>=0.14.0 in /usr/local/lib/python2.7/dist-packages (from librosa) (0.19.1)\n","Requirement already satisfied: scikit-learn!=0.19.0,>=0.14.0 in /usr/local/lib/python2.7/dist-packages (from librosa) (0.19.2)\n","Requirement already satisfied: joblib>=0.12 in /usr/local/lib/python2.7/dist-packages (from librosa) (0.12.5)\n","Requirement already satisfied: decorator>=3.0.0 in /usr/local/lib/python2.7/dist-packages (from librosa) (4.3.0)\n","Requirement already satisfied: six>=1.3 in /usr/local/lib/python2.7/dist-packages (from librosa) (1.11.0)\n","Collecting resampy>=0.2.0 (from librosa)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/14/b6/66a06d85474190b50aee1a6c09cdc95bb405ac47338b27e9b21409da1760/resampy-0.2.1.tar.gz (322kB)\n","\u001b[K    100% |████████████████████████████████| 327kB 25.3MB/s \n","\u001b[?25hCollecting numba>=0.38.0 (from librosa)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/8c/8b/1f9eba219cc2ebcdd2bef9864984f47b80dbc86a8b87ede2654cbc533681/numba-0.40.0-cp27-cp27mu-manylinux1_x86_64.whl (2.4MB)\n","\u001b[K    100% |████████████████████████████████| 2.4MB 6.9MB/s \n","\u001b[?25hRequirement already satisfied: funcsigs in /usr/local/lib/python2.7/dist-packages (from numba>=0.38.0->librosa) (1.0.2)\n","Requirement already satisfied: enum34 in /usr/local/lib/python2.7/dist-packages (from numba>=0.38.0->librosa) (1.1.6)\n","Collecting llvmlite>=0.25.0dev0 (from numba>=0.38.0->librosa)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/03/cd/a29f3a1964c3a4198c44390516ac6e29115911104219ba7a8c7e924e818e/llvmlite-0.25.0-cp27-cp27mu-manylinux1_x86_64.whl (16.1MB)\n","\u001b[K    100% |████████████████████████████████| 16.1MB 1.8MB/s \n","\u001b[?25hRequirement already satisfied: singledispatch in /usr/local/lib/python2.7/dist-packages (from numba>=0.38.0->librosa) (3.4.0.3)\n","Building wheels for collected packages: librosa, audioread, resampy\n","  Running setup.py bdist_wheel for librosa ... \u001b[?25l-\b \b\\\b \bdone\n","\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/18/b8/10/f0f8f6ac60668a5cd75596cf14c25bb6b3ea1ecd815f058b7e\n","  Running setup.py bdist_wheel for audioread ... \u001b[?25l-\b \bdone\n","\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/53/02/90/7b5c4081b7470c550ab605f600bad237dde12a6b8999b11f50\n","  Running setup.py bdist_wheel for resampy ... \u001b[?25l-\b \bdone\n","\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/ff/4f/ed/2e6c676c23efe5394bb40ade50662e90eb46e29b48324c5f9b\n","Successfully built librosa audioread resampy\n","Installing collected packages: audioread, llvmlite, numba, resampy, librosa\n","Successfully installed audioread-2.1.6 librosa-0.6.2 llvmlite-0.25.0 numba-0.40.0 resampy-0.2.1\n"],"name":"stdout"}]},{"metadata":{"id":"RN6w88z3AMj1","colab_type":"code","colab":{}},"cell_type":"code","source":["yTest, srTest = librosa.load('kiran2-01.wav')\n","\n","\n","y1, sr1 = librosa.load('Aman1-01.wav')\n","y2, sr2 = librosa.load('Aman2-01.wav')\n","y3, sr3 = librosa.load('kiran1-01.wav')\n","#y4, sr4 = librosa.load('kiran2-01.wav')\n","\n","mfcc1 = librosa.feature.mfcc(y1, sr1)\n","mfcc2 = librosa.feature.mfcc(y2, sr2)\n","mfcc3 = librosa.feature.mfcc(y3, sr3)\n","#mfcc4 = librosa.feature.mfcc(y4, sr4)\n","\n","import copy\n","def preprocess_mfcc(mfcc):\n","    mfcc_cp = copy.deepcopy(mfcc)\n","    for i in xrange(mfcc.shape[1]):\n","        mfcc_cp[:,i] = mfcc[:,i] - np.mean(mfcc[:,i])\n","        mfcc_cp[:,i] = mfcc_cp[:,i]/np.max(np.abs(mfcc_cp[:,i]))\n","    return mfcc_cp\n","\n","mfccTest = librosa.feature.mfcc(yTest,srTest)\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"L1kWUijRuKRG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"outputId":"22424311-74cb-4935-fd29-ed28f0b31a32","executionInfo":{"status":"ok","timestamp":1537611478481,"user_tz":-330,"elapsed":2940,"user":{"displayName":"Philemon Daniel","photoUrl":"","userId":"06587091607560878110"}}},"cell_type":"code","source":["window_size = mfcc1.shape[1]\n","dists = np.zeros(mfccTest.shape[1] - window_size)\n","\n","for i in range(len(dists)):\n","    mfcci = mfccTest[:,i:i+window_size]\n","    dist1i = dtw(mfcc1.T, mfcci.T,dist = lambda x, y: np.exp(np.linalg.norm(x - y, ord=1)))[0]\n","    dist2i = dtw(mfcc2.T, mfcci.T,dist = lambda x, y: np.exp(np.linalg.norm(x - y, ord=1)))[0]\n","    dist3i = dtw(mfcc3.T, mfcci.T,dist = lambda x, y: np.exp(np.linalg.norm(x - y, ord=1)))[0]\n","    dists[i] = (dist1i + dist2i + dist3i)/3\n","plt.plot(dists)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py:8: RuntimeWarning: overflow encountered in exp\n","  \n","/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py:6: RuntimeWarning: overflow encountered in exp\n","  \n","/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py:7: RuntimeWarning: overflow encountered in exp\n","  import sys\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f2a73292d10>]"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"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\nHnkAAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x7f2ac8920850>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"JwRr3sTbuciE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":197},"outputId":"3bea5255-1383-401b-b43f-ef62ef266b45","executionInfo":{"status":"error","timestamp":1537611486695,"user_tz":-330,"elapsed":1681,"user":{"displayName":"Philemon Daniel","photoUrl":"","userId":"06587091607560878110"}}},"cell_type":"code","source":["# select minimum distance window\n","word_match_idx = dists.argmin()\n","# convert MFCC to time domain\n","word_match_idx_bnds = np.array([word_match_idx,np.ceil(word_match_idx+window_size)])\n","samples_per_mfcc = 512\n","word_samp_bounds = (2/2) + (word_match_idx_bnds*samples_per_mfcc)\n","\n","word = yTest[word_samp_bounds[0]:word_samp_bounds[1]]"],"execution_count":9,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mTypeError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-9-d6cd215840b8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mword_samp_bounds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mword_match_idx_bnds\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0msamples_per_mfcc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mword\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myTest\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mword_samp_bounds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mword_samp_bounds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: slice indices must be integers or None or have an __index__ method"]}]},{"metadata":{"id":"QXRh0DPiZRyG","colab_type":"text"},"cell_type":"markdown","source":["# Observe TensorFlow speedup on GPU relative to CPU\n","\n","This example constructs a typical convolutional neural network layer over a\n","random image and manually places the resulting ops on either the CPU or the GPU\n","to compare execution speed."]},{"metadata":{"id":"t9ALbbpmY9rm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"outputId":"c5ee74e3-f88b-4660-dcba-354d09fa5659"},"cell_type":"code","source":["import tensorflow as tf\n","import timeit\n","\n","# See https://www.tensorflow.org/tutorials/using_gpu#allowing_gpu_memory_growth\n","config = tf.ConfigProto()\n","config.gpu_options.allow_growth = True\n","\n","with tf.device('/cpu:0'):\n","  random_image_cpu = tf.random_normal((100, 100, 100, 3))\n","  net_cpu = tf.layers.conv2d(random_image_cpu, 32, 7)\n","  net_cpu = tf.reduce_sum(net_cpu)\n","\n","with tf.device('/gpu:0'):\n","  random_image_gpu = tf.random_normal((100, 100, 100, 3))\n","  net_gpu = tf.layers.conv2d(random_image_gpu, 32, 7)\n","  net_gpu = tf.reduce_sum(net_gpu)\n","\n","sess = tf.Session(config=config)\n","\n","# Test execution once to detect errors early.\n","try:\n","  sess.run(tf.global_variables_initializer())\n","except tf.errors.InvalidArgumentError:\n","  print(\n","      '\\n\\nThis error most likely means that this notebook is not '\n","      'configured to use a GPU.  Change this in Notebook Settings via the '\n","      'command palette (cmd/ctrl-shift-P) or the Edit menu.\\n\\n')\n","  raise\n","\n","def cpu():\n","  sess.run(net_cpu)\n","  \n","def gpu():\n","  sess.run(net_gpu)\n","  \n","# Runs the op several times.\n","print('Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images '\n","      '(batch x height x width x channel). Sum of ten runs.')\n","print('CPU (s):')\n","cpu_time = timeit.timeit('cpu()', number=10, setup=\"from __main__ import cpu\")\n","print(cpu_time)\n","print('GPU (s):')\n","gpu_time = timeit.timeit('gpu()', number=10, setup=\"from __main__ import gpu\")\n","print(gpu_time)\n","print('GPU speedup over CPU: {}x'.format(int(cpu_time/gpu_time)))\n","\n","sess.close()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images (batch x height x width x channel). Sum of ten runs.\n","CPU (s):\n","8.350230318000058\n","GPU (s):\n","0.1842791589999706\n","GPU speedup over CPU: 45x\n"],"name":"stdout"}]}]}